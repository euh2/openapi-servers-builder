name: Check for Upstream Updates

on:
  schedule:
    # Check for updates twice daily
    - cron: "0 6,18 * * *"
  workflow_dispatch:

jobs:
  check-upstream:
    name: Check for Upstream Changes
    runs-on: ubuntu-latest
    permissions:
      contents: write      # Required to push commits
      issues: write        # Required to create issues  
      actions: write       # Required to trigger other workflows
    steps:
      - name: Checkout builder repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check upstream repository
        id: upstream
        run: |
          # Get the latest commit from upstream
          UPSTREAM_COMMIT=$(curl -s https://api.github.com/repos/open-webui/openapi-servers/commits/main | jq -r '.sha')
          echo "upstream_commit=$UPSTREAM_COMMIT" >> $GITHUB_OUTPUT

          # Check if we have this commit in our records
          if [ -f .last_upstream_commit ]; then
            LAST_COMMIT=$(cat .last_upstream_commit)
          else
            LAST_COMMIT=""
          fi

          echo "last_commit=$LAST_COMMIT" >> $GITHUB_OUTPUT

          if [ "$UPSTREAM_COMMIT" != "$LAST_COMMIT" ]; then
            echo "changes_detected=true" >> $GITHUB_OUTPUT
            echo "New changes detected in upstream repository"
            echo "Last known: $LAST_COMMIT"
            echo "Latest: $UPSTREAM_COMMIT"
          else
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            echo "No new changes in upstream repository"
          fi

      - name: Update commit record
        if: steps.upstream.outputs.changes_detected == 'true'
        run: |
          echo "${{ steps.upstream.outputs.upstream_commit }}" > .last_upstream_commit

      - name: Commit updated record
        if: steps.upstream.outputs.changes_detected == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .last_upstream_commit
          git commit -m "Update upstream commit reference to ${{ steps.upstream.outputs.upstream_commit }}" || exit 0
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger build workflow
        if: steps.upstream.outputs.changes_detected == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build-and-push.yml',
              ref: 'main'
            });

      - name: Create issue on significant changes
        if: steps.upstream.outputs.changes_detected == 'true'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: commits } = await github.rest.repos.compareCommits({
              owner: 'open-webui',
              repo: 'openapi-servers',
              base: '${{ steps.upstream.outputs.last_commit }}',
              head: '${{ steps.upstream.outputs.upstream_commit }}'
            });

            if (commits.files && commits.files.length > 0) {
              const changedFiles = commits.files.map(f => f.filename).join('\n- ');
              const issueBody = `## ðŸ”„ Upstream Changes Detected

            New changes have been detected in the upstream repository and a build has been triggered.

            **Commit Range**: [\`${commits.base_commit.sha.substring(0,7)}\`...(\`${commits.head_commit.sha.substring(0,7)}\`](https://github.com/open-webui/openapi-servers/compare/${commits.base_commit.sha}...${commits.head_commit.sha})

            **Changed Files**:
            - ${changedFiles}

            **Commits**: ${commits.commits.length}

            Please review the changes and verify that the build completed successfully.`;

              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Upstream changes detected - ${new Date().toISOString().split('T')[0]}`,
                body: issueBody,
                labels: ['upstream-sync', 'automated']
              });
            }
